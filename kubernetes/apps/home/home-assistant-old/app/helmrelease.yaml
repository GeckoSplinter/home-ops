---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant-old
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: longhorn
      namespace: longhorn-system
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-assistant/home-assistant
              tag: 2024.7.4
            env:
              TZ: 'Europe/Paris'
              HASS_HTTP_TRUSTED_PROXY_1: 192.168.10.0/24
              HASS_HTTP_TRUSTED_PROXY_2: 192.168.42.0/24
              HASS_HTTP_TRUSTED_PROXY_3: 10.42.0.0/16
            probes: &probes
              liveness:
                enabled: false
              readiness:
                enabled: false
              startup:
                enabled: false
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
          code:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.89.1
            env:
              TZ: Europe/Paris
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "80",
              "/config"
            ]
            probes: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
          code:
            port: 80
    ingress:
      app:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        className: internal
        hosts:
          - host: old.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
      code:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/target: "internal.${SECRET_DOMAIN}"
        className: internal
        hosts:
          - host: hass-code-old.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: code
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: controller/rflink
      #           operator: Exists
    persistence:
      config:
        existingClaim: home-assistant-config
        globalMounts:
          - path: /config
      tmp:
        type: emptyDir
        globalMounts:
          - path: :/tmp
      # usb:
      #   type: hostPath
      #   hostPath: /dev/rflink
